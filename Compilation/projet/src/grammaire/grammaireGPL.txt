Bloc := 'DEBUT' . Inst . 'FIN' . '.'#28 ,
ENTIER := [ '0' + '1' + '2' + '3' + '4' + '5' + '6' + '7' + '8' + '9' ] ,
Booleen := TB . [ 'OU'#30 . TB#31 ] ,
TB := FB . [ 'ET'#32 . FB#31 ] ,
FB := PB#3000 + 'NON'#33 . PB#31 ,
PB := ( 'IDNTER'#4 + ENTIER#5 ) . OPREL . ( 'IDNTER'#4 + ENTIER#5 ) + '[' . Booleen . ']' ,
OPREL := ( '==' + '>' + '<' + '>=' + '<=' + '!=' ) ,
OPMATH := ( '+' + '++' + '-' + '--' + '*' + '/' + '%' + '!' ) ,
OPEGAL := ( ':=' + '=' ) ,
Inst := ( AFFECTATION#27 + COND + WHILE + READ + WRITE ) . [ Inst ] ,
AFFECTATION := ( 'IDNTER'#3 . OPEGAL . ( 'IDNTER'#4 + ENTIER#5 ) . ( ';' + ( OPMATH . ( 'IDNTER'#4 + ENTIER#5 ) . [ OPMATH#1000 . ( 'IDNTER'#4 + ENTIER#5 ) ] . ';'#1000 ) ) ) ,
COND := 'IF' . Booleen#2000 . 'THEN' . Inst#2002 . 'ELSE'#2001 . Inst . 'ENDIF'#2003 ,
WHILE := 'WHILE' . Booleen#2000 . 'DO' . Inst#2004 . 'ENDWHILE' ,
READ := 'Read' . 'IDNTER'#3 . ';'#14 ,
WRITE := 'Writeln' . ( 'IDNTER'#4 + ENTIER#5 ) . ';'#16 , ;